{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":" Preprocessing Height Weight","provenance":[{"file_id":"13Quveaci1eqAwWYo-nyKa2pc1sRG7e0h","timestamp":1642492286937}],"collapsed_sections":[],"mount_file_id":"1JlbhW0Q68MdPif7kZPBZzPP_f_5ZD_rB","authorship_tag":"ABX9TyPhaj8FSbx6fGK+t7Susa/s"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#Varun Kamath 20BAI1066\n","\n","Basic Preprocessing"],"metadata":{"id":"xh2_FOXEfEwr"}},{"cell_type":"code","source":["import pandas as pd\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","import numpy as np"],"metadata":{"id":"P5wdSs4whoYx"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZVgO9Wbbx_kL","executionInfo":{"status":"ok","timestamp":1642428301199,"user_tz":-330,"elapsed":3230,"user":{"displayName":"Varun Kamath","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00945719874937822622"}},"outputId":"f943b969-64a4-447c-de24-b05f7cca52e2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["\n","df2 = pd.read_csv('/content/drive/MyDrive/Gcolab/weight-height.csv', encoding='latin-1')"],"metadata":{"id":"Qw1uKV2pyCbf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df2.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R9YEOgRizQ96","executionInfo":{"status":"ok","timestamp":1642428301201,"user_tz":-330,"elapsed":19,"user":{"displayName":"Varun Kamath","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00945719874937822622"}},"outputId":"ad6bcd8a-8b56-44fa-909a-fa516ba8fd08"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 10000 entries, 0 to 9999\n","Data columns (total 3 columns):\n"," #   Column  Non-Null Count  Dtype  \n","---  ------  --------------  -----  \n"," 0   Gender  10000 non-null  object \n"," 1   Height  10000 non-null  float64\n"," 2   Weight  10000 non-null  float64\n","dtypes: float64(2), object(1)\n","memory usage: 234.5+ KB\n"]}]},{"cell_type":"code","source":["df2.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"V5vARLJRzSGq","executionInfo":{"status":"ok","timestamp":1642428301201,"user_tz":-330,"elapsed":17,"user":{"displayName":"Varun Kamath","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00945719874937822622"}},"outputId":"2cc84279-b515-451c-bc68-7639825a7cc5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-bcb85196-d4c6-4cdd-a7c3-e69761619781\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Gender</th>\n","      <th>Height</th>\n","      <th>Weight</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Male</td>\n","      <td>73.847017</td>\n","      <td>241.893563</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Male</td>\n","      <td>68.781904</td>\n","      <td>162.310473</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Male</td>\n","      <td>74.110105</td>\n","      <td>212.740856</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Male</td>\n","      <td>71.730978</td>\n","      <td>220.042470</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Male</td>\n","      <td>69.881796</td>\n","      <td>206.349801</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bcb85196-d4c6-4cdd-a7c3-e69761619781')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-bcb85196-d4c6-4cdd-a7c3-e69761619781 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-bcb85196-d4c6-4cdd-a7c3-e69761619781');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["  Gender     Height      Weight\n","0   Male  73.847017  241.893563\n","1   Male  68.781904  162.310473\n","2   Male  74.110105  212.740856\n","3   Male  71.730978  220.042470\n","4   Male  69.881796  206.349801"]},"metadata":{},"execution_count":184}]},{"cell_type":"markdown","source":["Observing the above datasets we can see that we can use classification on the height weight dataset whereas we can usse regression for the laptop prices dataset"],"metadata":{"id":"hrGulZMCzXtG"}},{"cell_type":"code","source":["df2.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VEGTY_6VzxSQ","executionInfo":{"status":"ok","timestamp":1642428301202,"user_tz":-330,"elapsed":16,"user":{"displayName":"Varun Kamath","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00945719874937822622"}},"outputId":"60b6d045-fa0b-41e7-ca3c-8d15f33d8b9d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Gender    0\n","Height    0\n","Weight    0\n","dtype: int64"]},"metadata":{},"execution_count":186}]},{"cell_type":"markdown","source":["No Null values in both datasets so need not perform dropna on either"],"metadata":{"id":"4Mlh6aH6z3jO"}},{"cell_type":"code","source":["df2.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1k1veQ80z_ZU","executionInfo":{"status":"ok","timestamp":1642428301202,"user_tz":-330,"elapsed":13,"user":{"displayName":"Varun Kamath","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00945719874937822622"}},"outputId":"f5a216c0-5c66-4dbe-bae9-33726a205125"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(10000, 3)"]},"metadata":{},"execution_count":188}]},{"cell_type":"code","source":["#plotting lineplot to see how positively are weight and height correlated\n","sns.lineplot(data=df2,x='Height',y='Weight')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":296},"id":"8BJiMSje1O2i","executionInfo":{"status":"ok","timestamp":1642428374279,"user_tz":-330,"elapsed":1386,"user":{"displayName":"Varun Kamath","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00945719874937822622"}},"outputId":"0b77a9b0-c2b2-4c67-bc07-a194515c070e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fbac85824d0>"]},"metadata":{},"execution_count":190},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["#though no data cleaning has been done now, we will still export both df in case any changes have been made\n","df2.to_csv(r'/content/drive/MyDrive/Gcolab/weight-height.csv', index=False)"],"metadata":{"id":"5F9ZV8-Q4npE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"7LMXaoG4-cu1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"vWgt2la2KSMs"},"execution_count":null,"outputs":[]}]}